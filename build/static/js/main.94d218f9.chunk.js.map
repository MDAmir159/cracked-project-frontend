{"version":3,"sources":["functions/constFunctions/index.js","model/PostModel.js","views/Home/components/PostBox/PostBoxForm.js","backEndPort.js","BackendAddress.js","urls/url.js","functions/utilities.js","views/Home/components/PostBox/index.js","model/ObjectToBeSavedInBrowser.js","Utility/index.js","views/Home/components/HomeHeader/HomeHeaderElements.js","views/Home/components/HomeHeader/index.js","views/Home/components/PostLists/Post/PostView.js","views/Home/components/PostLists/Post/index.js","views/Home/components/PostLists/PostListitems.js","views/Home/components/PostLists/index.js","views/Home/HomeElements.js","views/Home/index.js","views/LogIn/LogInForm.js","views/LogIn/index.js","views/Home/components/HomeHeader/Profile/ProfileHeader/ProfileHeaderCom.js","views/Home/components/HomeHeader/Profile/ProfileHeader/index.js","views/Home/components/HomeHeader/Profile/ProfileHeader/Settings/Settings.js","views/Home/components/HomeHeader/Profile/ProfileHeader/Settings/index.js","views/Home/components/HomeHeader/Profile/ProfileHeader/Status/StatusView.js","views/Home/components/HomeHeader/Profile/ProfileHeader/Status/index.js","views/SignUp/SignInForm.js","views/SignUp/index.js","views/Home/components/HomeHeader/Profile/ProfileView.js","views/Home/components/HomeHeader/Profile/index.js","model/PostCommentModel.js","views/FullPost/PostComments/PostCommentView.js","views/FullPost/PostComments/index.js","views/FullPost/FullPostView.js","views/FullPost/index.js","views/NotFoundPage/NotFoundPageView.js","views/NotFoundPage/index.js","RoutingModules/PublicRoute.js","RoutingModules/PrivateRoute.js","Routes.js","App.js","reportWebVitals.js","history.js","index.js"],"names":["myFormattedTime","date","Date","hours","getHours","minutes","getMinutes","ampm","PostModel","description","userName","userId","this","postUserId","postUserName","postDescription","postInsertedTime","postUpdatedTime","PostBoxForm","props","tempPostDescription","authorisedUserDetails","onChangePostDescriptionHandler","onSubmitPostDescriptionHandler","postLabel","userHandle","className","onSubmit","TextField","id","label","defaultValue","helperText","variant","rows","multiline","value","onChange","Button","type","onClick","ADDRESS","URL","LOGIN_URL","SIGNUP_URL","POST_LIST_ITEMS_URL","LIKEPOST_URL","UNLIKEPOST_URL","CHECK_LIKED_URL","POST_NEW_ELEMENT_URL","UPDATE_USER_INFO_URL","USERINFO_SETTINGS_URL","USERS_POST_URL","SUBMIT_COMMENT_URL","FETCH_COMMENT_URL","PostBox","newPost","setNewPost","useState","setTempPostDescription","savingToDatabase","tempNewPost","a","console","log","axios","post","result","e","target","preventDefault","ObjectToBeSavedInBrowser","status","loggedIn","userDetails","getloggedInUsersInfo","localStorage","getItem","obj","JSON","parse","HomeHeaderElements","onClickProfileIconHandler","onClickLogOutHandler","size","color","HomeHeader","setAuthorisedUserDetails","history","useHistory","push","pathname","state","data","key","objectToBeSaved","stringify","setItem","PostView","item","open","anchorEl","noOfLikes","isLiked","comments_number","onClickLikeButtonHandler","onClickCommentButtonHandler","onClickShareButtonHandler","handleOptionSelectionOpener","selectedOptionHandler","handleClose","styles","makeStyles","theme","likeCommentShareButtonsContainer","display","flexDirection","marginBottom","minHeight","marginTop","likeButtonContainer","alignItems","justifyContent","minWidth","borderTopLeftRadius","borderBottomLeftRadius","commentButtonContainer","marginLeft","shareButtonContainer","borderTopRightRadius","borderBottomRightRadius","likeButtonStyle","width","backgroundColor","border","commentButtonStyle","shareButtonStyle","useStyles","charAt","IconButton","Menu","keepMounted","onClose","PaperProps","style","maxHeight","ITEM_HEIGHT","map","option","MenuItem","Divider","background","Post","setAnchorEl","Boolean","likes_number","setNoOfLikes","setIsLiked","isAllSet","setIsAllSet","useEffect","checkLikedStatus","then","res","length","postId","userData","currentTarget","PostListitems","postItemsIntel","root","alignSelf","lists_root","index","PostLists","HomeElements","Home","useLocation","setPostItemsIntel","get","LogInForm","tempUserDetails","onChangeTempUserHandleNameHandler","onChangeTempUserEmailHandler","onChangeTempUserPasswordHandler","loginSubmitHandler","tempUserHandleName","tempUserEmail","tempUserPassword","to","LogIn","Object","setTempUserDetails","saveToBrowserStorage","getLoggedIn","alert","ProfileHeaderCom","userPostItemsIntel","userEmailAddress","userPhoneNumber","height","ProfileHeader","Settings","isSame","isChanged","newUserDetails","tempPasswordStorage","onChangeHandleNameHandler","onChangeNameHandler","onChangeEmailHandler","onChangePhoneNumberHandler","onChangeCurrentPasswordHandler","onChangeFirstPasswordHandler","onChangeConfirmPasswordHandler","submitUsersUpdateInfo","setUserPostItemsIntel","borderRadius","borderStyle","padding","box","button_div","marginRight","button_desgin","paddingLeft","paddingRight","tectfield_design","setIsChanged","setIsSame","userHandleName","userPassword","userUpdatedTime","updateUserDetails","setUpdateUserDetails","currentPassword","password1","password2","setTempPasswordStorage","React","StatusView","Status","SignInForm","submitNewUsersAllInfo","userEmailAddess","SignUp","isSignedUp","setIsSignedUp","userInsertedTime","setNewUserDetails","response","ProfileView","useRouteMatch","path","url","icons","logger_name","fontSize","fontFamily","as","Link","exact","Profile","initialData","PostCommentModel","commentDescription","commentBy","commentWritingTime","PostCommentView","mainContainer","commenterNameDateContainer","commnerterName","commnerterNameStyle","commentTime","commentBody","commentBodyStyle","commentTimeStyle","PostComment","postDetails","commentsOnPost","FullPostView","totalComments","onChangeCommentHandler","onSubmitCommentHandler","placeholder","FullPost","location","tempComment","setTempCommnet","setCommentsOnPost","setTotalComments","fetchCommentsOnPost","countt","Math","floor","now","NotFoundPageView","class","href","NotFoundPage","PublicRoute","Component","component","rest","render","PrivateRoute","isLoggedIn","Routes","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.94d218f9.chunk.js","sourcesContent":["export const myFormattedTime = () =>{\n    var date = new Date();\n    var hours = date.getHours();\n    var minutes = date.getMinutes();\n    var ampm = hours >= 12 ? 'PM' : 'AM';\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n    minutes = minutes < 10 ? '0'+minutes : minutes;\n    const strTime = hours + ':' + minutes + ' ' + ampm ;\n    return strTime;\n}\n\n// export  function myFormattedDate(){\n//     const MonName = [\n//         \"\" , \"Jan\" , \"Feb\" , \"Mar\" , \"Apr\" , \"May\" , \"Jun\" , \"Jul\" , \"Aug\" , \"Sep\" , \"Oct\" , \"Nov\" , \"Dec\" \n//     ]\n//     var date = new Date();\n//     var dateNo = date.getDate();\n//     var month = date.getMonth();\n//     var year = date.getFullYear();\n//     var strDate = dateNo + \" \" + MonName[month] + ',' + year;\n//     return strDate;\n\n// }","import myFormattedTime from \"../functions/constFunctions\";\n\nexport class PostModel  {\n    constructor(description,userName,userId){\n        this.postUserId = userId\n        this.postUserName = userName\n        this.postDescription = description\n        this.postInsertedTime = \"\"\n        this.postUpdatedTime = \"\"\n    }\n}","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button , TextField } from '@material-ui/core';\nimport './PostBoxForm.css'\n\nexport default function PostBoxForm(props) {\n    const{\n        tempPostDescription,\n        authorisedUserDetails,\n        onChangePostDescriptionHandler,\n        onSubmitPostDescriptionHandler\n    } = props;\n\n\n    const postLabel = \"What's on your mind,\" + authorisedUserDetails.userHandle + \" ?\";\n\n    return (\n        <div className = \"root_postBox\">\n            <form onSubmit = {onSubmitPostDescriptionHandler}>\n                <div className = \"box\" >\n                    <TextField\n                        className = \"textfield_design\"\n                        id=\"outlined-helperText\"\n                        label= {postLabel}\n                        defaultValue=\"\"\n                        helperText=\"\"\n                        variant=\"outlined\"\n                        rows = {5}\n                        multiline\n                        value = {tempPostDescription}\n                        onChange = {onChangePostDescriptionHandler}\n                    />\n                </div>\n                <div className = \"button_div\">\n                    <Button\n                        type = \"submit\"\n                        className = \"button_desgin\"\n                        onClick ={onSubmitPostDescriptionHandler}\n                    >\n                        <label className = \"button_label\">\n                            POST\n                        </label>\n                    </Button>\n                </div>\n            </form>          \n        </div>\n    )\n}\n","export const PORT = 9001;\n","import { PORT } from './backEndPort';\r\n\r\n//export const ADDRESS = `http://localhost:${PORT}`;\r\nexport const ADDRESS = `https://fast-meadow-49435.herokuapp.com`;\r\n\r\n","import { ADDRESS } from '../BackendAddress';\n\nexport const URL = {\n    LOGIN_URL : `${ADDRESS}/logIn/login`,\n    SIGNUP_URL : `${ADDRESS}/signUp/signup`,\n    POST_LIST_ITEMS_URL : `${ADDRESS}/homeElements/postListItems`,\n    LIKEPOST_URL : `${ADDRESS}/post/likePost`,\n    UNLIKEPOST_URL : `${ADDRESS}/post/unlikePost`,\n    CHECK_LIKED_URL : `${ADDRESS}/post/checkLiked`,\n    POST_NEW_ELEMENT_URL : `${ADDRESS}/homeElements/postNewElements`,\n    UPDATE_USER_INFO_URL : `${ADDRESS}/profile/settings/updateUserInfo`,\n    USERINFO_SETTINGS_URL : `${ADDRESS}/profile/settings/userInfo`,\n    USERS_POST_URL : `${ADDRESS}/profile/Status/userPosts`,\n    SUBMIT_COMMENT_URL : `${ADDRESS}/post/postComment`,\n    FETCH_COMMENT_URL : `${ADDRESS}/post/fetchComments`\n}","export const myFormattedTime = () =>{\n    var date = new Date();\n    var hours = date.getHours();\n    var minutes = date.getMinutes();\n    var ampm = hours >= 12 ? 'PM' : 'AM';\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n    minutes = minutes < 10 ? '0'+minutes : minutes;\n    const strTime = hours + ':' + minutes + ' ' + ampm ;\n    return strTime;\n};","import axios from 'axios';\nimport React , {useState, useEffect} from 'react'\nimport { useHistory } from 'react-router-dom';\nimport { PostModel } from '../../../../model/PostModel.js';\nimport PostBoxForm from './PostBoxForm'\nimport {URL} from '../../../../urls/url';\nimport { myFormattedTime } from '../../../../functions/utilities.js';\n\nexport default function PostBox(props) {\n    \n    /////////////////////////////////////////////////////////////   model /////////////////////////////////////////////////////////////\n\n    const {newPost , authorisedUserDetails , setNewPost} = props;\n    const [tempPostDescription, setTempPostDescription] = useState(\"\");\n\n    ///////////////////////////////////////////////////////////// controller //////////////////////////////////////////////////////////\n    \n    const savingToDatabase = async(tempNewPost) =>{\n        console.log(\"inside saving to database\");\n        try {\n            console.log(\"sldfnjcn\");\n            const result = await axios.post(URL.POST_NEW_ELEMENT_URL, {tempNewPost})\n            console.log(\"jasdnasb\");\n            console.log(result);\n        } catch (error) {\n            console.log(error);\n        }\n        setTempPostDescription(\"\");\n    }\n\n    // post description changing handler\n    const onChangePostDescriptionHandler = (e) =>{\n        setTempPostDescription(e.target.value);\n    }\n\n    // post publishing conformation\n    const onSubmitPostDescriptionHandler = (e) =>{\n        e.preventDefault();\n        const tempNewPost = new PostModel(tempPostDescription,authorisedUserDetails.userHandle,authorisedUserDetails.userId);\n        console.log(tempNewPost);\n        savingToDatabase(tempNewPost);\n    }\n\n    //////////////////////////////////////////////////////////// view /////////////////////////////////////////////////////////////////\n    \n    return <PostBoxForm\n                tempPostDescription = {tempPostDescription}\n                authorisedUserDetails = {authorisedUserDetails}\n                onChangePostDescriptionHandler = {onChangePostDescriptionHandler}\n                onSubmitPostDescriptionHandler = {onSubmitPostDescriptionHandler}\n            />\n}\n","export class ObjectToBeSavedInBrowser {\n    constructor(status,value){\n        this.loggedIn = status\n        this.userDetails = value\n    }\n}","export const isLoggedIn = () =>{\r\n    let value = localStorage.getItem('DLGT_PROJECT2_postGivingAppRemastered');\r\n    const obj = JSON.parse(value);\r\n    console.log(obj.loggedIn);\r\n    return obj.loggedIn;\r\n    // return false;\r\n}\r\n\r\nexport const getloggedInUsersInfo = () =>{\r\n    let value = localStorage.getItem('DLGT_PROJECT2_postGivingAppRemastered');\r\n    const obj = JSON.parse(value);\r\n    console.log(obj.userDetails);\r\n    return obj.userDetails;\r\n}\r\n\r\nexport const getLoggedIn = (key , value) =>{\r\n    localStorage.setItem(key,value);\r\n}\r\n\r\nexport const getLoggedOut = (key,value) =>{\r\n    localStorage.setItem(key,value);\r\n}\r\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CgProfile } from \"react-icons/cg\";\nimport { Button  } from '@material-ui/core';\nimport { RiLogoutCircleRLine } from 'react-icons/ri';\nimport './HomeHeaderElements.css'\n\nexport default function HomeHeaderElements(props) {\n    const {\n        authorisedUserDetails , \n        onClickProfileIconHandler,\n        onClickLogOutHandler\n    } = props;\n\n    return (\n        <div className = \"root-home-header\">\n            {/* logged in as portion */}\n            <div className = \"header_title\">\n                <p className = \"logger_name\">\n                    <b>{authorisedUserDetails.userName}</b>\n                </p>\n            </div>\n\n            <div className = \"settings\">\n                <div className = \"settings_icon\">\n                    <Button onClick = {onClickProfileIconHandler} >\n                        <CgProfile className=\"icons\" size = \"35\" color = \"#ffffff\" />\n                    </Button>\n                </div>\n                <div className = \"logout_icon\">\n                    <Button onClick = {onClickLogOutHandler} >\n                        <RiLogoutCircleRLine className=\"icons\" size = \"35\" color = \"#ffffff\" />\n                    </Button>\n                </div>\n                \n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useHistory } from 'react-router-dom';\nimport { ObjectToBeSavedInBrowser } from '../../../../model/ObjectToBeSavedInBrowser';\nimport Routes from '../../../../Routes';\nimport { getLoggedOut } from '../../../../Utility';\nimport HomeHeaderElements from './HomeHeaderElements'\n\nexport default function HomeHeader(props) {\n    const {authorisedUserDetails, setAuthorisedUserDetails} = props;\n\n    let history = useHistory();\n\n    const onClickProfileIconHandler = () =>{\n        history.push({\n            pathname : '/profile',\n            state : {data : authorisedUserDetails}\n        })\n    }\n\n    const onClickLogOutHandler = () =>{\n        ////////// saving user info locally as being logged in   /////////////////\n        const objectToBeSaved = new ObjectToBeSavedInBrowser(false,\"\");\n        getLoggedOut('DLGT_PROJECT2_postGivingAppRemastered',JSON.stringify(objectToBeSaved));\n\n        ////////// setting new path  //////////\n        history.push({\n            pathname : '/login'\n        })\n    }\n\n    return <HomeHeaderElements \n                authorisedUserDetails = {authorisedUserDetails}\n                setAuthorisedUserDetails = {setAuthorisedUserDetails}\n                onClickProfileIconHandler = {onClickProfileIconHandler}\n                onClickLogOutHandler = {onClickLogOutHandler}\n            />\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport { IoEllipsisVertical } from \"react-icons/io5\";\nimport { AiTwotoneLike , AiOutlineLike } from \"react-icons/ai\";\nimport {FaCommentDots, FaRegShareSquare} from \"react-icons/fa\";\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { Divider } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport './PostView.css'\nexport default function PostView(props) {\n    ///// recieving props\n    const {\n        item ,\n        open,\n        anchorEl,\n        noOfLikes,\n        isLiked,\n        authorisedUserDetails,\n        comments_number,\n        onClickLikeButtonHandler,\n        onClickCommentButtonHandler,\n        onClickShareButtonHandler,\n        handleOptionSelectionOpener ,\n        selectedOptionHandler , \n        handleClose\n    } = props;\n\n    ///styling constants\n    const useStyles = makeStyles((theme) => ({\n        \n        likeCommentShareButtonsContainer:{\n            display : 'flex',\n            flexDirection : 'row',\n            marginBottom : '1ch',\n            minHeight : '4ch',\n            marginTop : '1ch',\n            // borderRadius : '10ch'\n        },\n        likeButtonContainer:{\n            display : 'flex',\n            minHeight : '100%',\n            alignItems : 'center',\n            justifyContent :'center',\n            // backgroundColor : 'red',\n            minWidth : '33%',\n            borderTopLeftRadius : '10ch',\n            borderBottomLeftRadius : '10ch',\n        },\n        commentButtonContainer:{\n            display : 'flex',\n            minHeight : '100%',\n\n            alignItems : 'center',\n            justifyContent :'center',\n            // backgroundColor : 'green',\n            minWidth : '33%',\n            marginLeft : '.5ch'\n        },\n        shareButtonContainer:{\n            display : 'flex',\n            minHeight : '100%',\n            alignItems : 'center',\n            justifyContent :'center',\n            // backgroundColor : 'blue',\n            minWidth : '34%',\n            borderTopRightRadius : '10ch',\n            borderBottomRightRadius : '10ch',\n            marginLeft : '.5ch'\n        },\n        likeButtonStyle:{\n            width : '100%',\n            minHeight : '100%',\n            borderTopLeftRadius : '10ch',\n            borderBottomLeftRadius : '10ch',\n            backgroundColor : '#bacfcb',\n            border : 'none'\n        },\n        commentButtonStyle:{\n            width : '100%',\n            minHeight : '100%',\n            backgroundColor : '#bacfcb',\n            border : 'none'\n        },\n        shareButtonStyle:{\n            width : '100%',\n            minHeight : '100%',\n            borderTopRightRadius : '10ch',\n            borderBottomRightRadius : '10ch',\n            backgroundColor : '#bacfcb',\n            border : 'none'\n        },\n\n        \n        \n\n\n    }));\n    const styles = useStyles();\n    const likes = 20;\n    const comments = 19;\n    const ITEM_HEIGHT = 40;\n    const options = [\n        'Edit',\n        'Delete'\n    ];\n\n    console.log(item);\n\n    return (\n            <div className = \"root-postview\">\n                {/* container */}\n                <div className = \"container\">\n                    {/* header portion */}\n                    <div className = \"header_details\">\n                        {/* user Avatar */}\n                        <div className = \"user_avatar\">\n                                {item.postUserName.charAt(0)}\n                        </div>\n                        {/* name and time */}\n                        <div className = \"post_details\">\n                            <label className = \"post_user_name\">\n                                <b>{item.postUserName}</b>\n                            </label>\n                            <label className = \"post_time\">\n                                {item.postInsertedTime}\n                            </label>\n                        </div>\n                        {/* option icon */}\n                        <div>\n                            {\n                                (item.userId === authorisedUserDetails.userId) ? (\n                                    <div className = \"post_options\">\n                                        <IconButton\n                                            aria-label=\"more\"\n                                            aria-controls=\"long-menu\"\n                                            aria-haspopup=\"true\"\n                                            color=\"primary\"\n                                            onClick = {handleOptionSelectionOpener}\n                                        >\n                                            <IoEllipsisVertical size = \"18\"/>\n                                        </IconButton>\n                                        <Menu\n                                            id=\"long-menu\"\n                                            anchorEl={anchorEl}\n                                            keepMounted\n                                            open={open}\n                                            onClose={handleClose}\n                                            PaperProps={{\n                                                style: {\n                                                    maxHeight: ITEM_HEIGHT * 4.5,\n                                                    width: '18ch',\n                                                },\n                                            }}\n                                        >\n                                            {options.map((option) => (\n                                            <MenuItem key={option} onClick={selectedOptionHandler}>\n                                                {option}\n                                            </MenuItem>\n                                            ))}\n                                        </Menu>\n                                    </div>\n                                ): \"\"\n                            }\n                        </div>\n                        \n                    </div>\n                    \n                    {/* post text */}\n                    <div className = \"post_text\">\n                        <p className = \"post_text_p\"> {item.postDescription} </p>\n                    </div>\n                    \n                    <br/>\n                    <div className = \"totalLikesComments\">\n                        <div className = \"totalLikes\">\n                             <label>{noOfLikes} {(noOfLikes < 2) ? \"Like\" : \"Likes\"}</label>\n                        </div>\n                        <div className = \"totalComments\">\n                            <label>{comments_number} comments</label>\n                        </div>\n                    </div>\n                    <Divider style = {{\n                        background: 'black'\n                    }} />\n                    <div className = {styles.likeCommentShareButtonsContainer}>\n                        <div className = {styles.likeButtonContainer}>\n                            <button\n                                className = {styles.likeButtonStyle}\n                                onClick = {onClickLikeButtonHandler}\n                            >\n                                {\n                                    isLiked ? <AiTwotoneLike size = \"22\" /> : <AiOutlineLike size = \"18\" />\n                                } \n                            </button>\n                        </div>\n                        <div className = {styles.commentButtonContainer}>\n                            <button \n                                className = {styles.commentButtonStyle}\n                                onClick = {onClickCommentButtonHandler}\n                            >\n                                <FaCommentDots size = \"18\"/>\n                            </button>\n                        </div>\n                        <div className = {styles.shareButtonContainer}>\n                            <Button\n                                className = {styles.shareButtonStyle}\n                                onClick = {onClickShareButtonHandler}\n                            >\n                                <FaRegShareSquare size = \"18\" />\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n    )\n}","import React , {useState, useEffect} from 'react'\nimport PostView from './PostView';\nimport { useHistory } from 'react-router';\nimport axios from 'axios';\nimport {PORT} from '../../../../../backEndPort';\nimport { URL } from '../../../../../urls/url';\n\n\n\nexport default function Post(props) {\n\n    // console.log(props);\n    /// init post item\n    const [item, setItem] = useState(props.value)\n    const [authorisedUserDetails, setAuthorisedUserDetails] = useState(props.authorisedUserDetails)\n    /// init menu\n    const [anchorEl, setAnchorEl] = useState(null);\n    const open = Boolean(anchorEl);\n    const [noOfLikes, setNoOfLikes] = useState(item.likes_number)\n    const [isLiked, setIsLiked] = useState(false)\n    const [isAllSet, setIsAllSet] = useState(false)\n    let history = useHistory();\n\n    ////////////////////////////////////////////////////////////////////////////////////////////\n\n    useEffect(() => {\n        checkLikedStatus();\n    }, [isAllSet])\n\n    //check if the post is liked\n    const checkLikedStatus = () => {\n        axios.post(URL.CHECK_LIKED_URL, {item, authorisedUserDetails})\n        .then((res) =>{\n            if(res.data.length){\n                setIsLiked(true)\n                // console.log(isLiked)\n            } else {\n                setIsLiked(false)\n            }\n        })\n    }\n\n    // like the post\n    const likeThePost = () => {\n        axios.post(URL.LIKEPOST_URL, {item, authorisedUserDetails})\n        .then((res) =>{\n            console.log(res)\n        })\n    }\n\n    //unlike the post\n    const unLikeThePost = () => {\n        axios.post(URL.UNLIKEPOST_URL,{item, authorisedUserDetails})\n        .then((res) =>{\n            console.log(res)\n        })\n    }\n\n    const handleOptionSelectionOpener = (e) =>{\n        setAnchorEl(e.currentTarget);\n    }\n\n    const selectedOptionHandler = () =>{\n        /// selecting a post\n        history.push({\n            // pathname : `/newfile/${item.postId}`,\n            pathname : `/newpage`,\n            state : {data : item}\n        })\n        \n    }\n\n    const handleClose = (option) => {\n        setAnchorEl(null);\n    };\n\n    //// handling action for like button\n    const onClickLikeButtonHandler = (e) =>{\n        checkLikedStatus()\n        if(!isLiked) {\n            likeThePost()\n            setNoOfLikes(noOfLikes + 1)\n        } else {\n            unLikeThePost()\n            setNoOfLikes(noOfLikes - 1)\n        }\n        setIsAllSet(true)\n    }\n\n    /// handling action for comment button\n    const onClickCommentButtonHandler = (e) =>{\n        history.push({\n            pathname : `/fullpost/${item.postId}`,\n            state : {\n                data : item,\n                userData : authorisedUserDetails\n            }\n        })\n        console.log(\"comment button prossed\");\n        \n    }\n\n    const onClickShareButtonHandler = (e) =>{\n        e.preventDefault();\n        console.log(\"share button prossed\");\n        \n    }\n\n    ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n    return (\n        <div>\n            <PostView\n                item = {item}\n                open = {open}\n                anchorEl = {anchorEl}\n                noOfLikes = {noOfLikes}\n                isLiked = {isLiked}\n                authorisedUserDetails = {props.authorisedUserDetails}\n                comments_number = {item.comments_number}\n\n                onClickLikeButtonHandler = {onClickLikeButtonHandler}\n                onClickCommentButtonHandler = {onClickCommentButtonHandler}\n                onClickShareButtonHandler = {onClickShareButtonHandler}\n                handleOptionSelectionOpener = {handleOptionSelectionOpener}\n                selectedOptionHandler = {selectedOptionHandler}\n                handleClose = {handleClose}\n            />\n        </div>\n    )\n}\n","import React from 'react'\nimport Post from './Post'\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport default function PostListitems(props) {\n    const {\n        authorisedUserDetails,\n        postItemsIntel\n    } = props;\n    //console.log(postItemsIntel);\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            width: 'auto',\n            display: 'flex',\n            alignSelf: 'center',\n        },\n        lists_root: {\n            width: 'auto',\n            display: 'flex',\n            flexDirection: 'column',\n        }\n    }));\n    const styles = useStyles();\n\n    return (\n        <div className={styles.root}>\n            <div className={styles.lists_root}>\n                {\n                    postItemsIntel.map((item , index) => <Post key = {index} value = {item} authorisedUserDetails = {authorisedUserDetails}/>)\n                }\n            </div>\n        </div>\n    );\n}\n","import axios from 'axios';\nimport React from 'react'\nimport PostListitems from './PostListitems'\n\nexport default function PostLists(props) {\n    const {\n        authorisedUserDetails,\n        postItemsIntel\n    } = props;\n    return <PostListitems\n                authorisedUserDetails = {authorisedUserDetails}\n                postItemsIntel = {postItemsIntel}\n            />\n}\n","import React from 'react'\nimport HomeHeader from './components/HomeHeader'\nimport PostBox from './components/PostBox'\nimport PostLists from './components/PostLists';\nimport '../Home/HomeElements.css'\nexport default function HomeElements(props) {\n    ///////////////////////////////////////////////////////////////////////////////////////////////\n    const {\n        newPost , \n        authorisedUserDetails, \n        setAuthorisedUserDetails, \n        postItemsIntel, \n        setNewPost\n    } = props;\n    ////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n    /////////////////////////////////////////////////////////////////////////////////////////////////\n    return (\n        <div className = \"root-home\">\n            <div className = \"home-container\">\n             \n                <HomeHeader\n                    authorisedUserDetails = {authorisedUserDetails}\n                    setAuthorisedUserDetails = {setAuthorisedUserDetails}\n                />\n                <PostBox \n                    newPost = {newPost}\n                    authorisedUserDetails = {authorisedUserDetails}\n                    setNewPost = {setNewPost}\n                />\n                <PostLists \n                    authorisedUserDetails = {authorisedUserDetails}\n                    postItemsIntel = {postItemsIntel}\n                />\n               \n            </div>\n        </div>\n    )\n}\n","import axios from 'axios';\nimport React , {useState, useEffect} from 'react'\nimport { useLocation } from 'react-router-dom';\nimport PostBox from './components/PostBox'\nimport HomeElements from './HomeElements'\nimport { URL } from '../../urls/url';\nimport { getloggedInUsersInfo } from '../../Utility';\n\nexport default function Home(props) {\n    \n    let location = useLocation()\n\n    ////////////////////////////////////////////     model portion     ///////////////////////////////////////\n    const [newPost, setNewPost] = useState();\n    const [postItemsIntel, setPostItemsIntel] = useState([]);\n    const [authorisedUserDetails, setAuthorisedUserDetails] = useState(getloggedInUsersInfo());\n    \n    ///////////////////////////////////////////        controller     ///////////////////////////////////////////\n\n    useEffect(() => {\n        axios.get(URL.POST_LIST_ITEMS_URL)\n        .then((res)=>{\n            setPostItemsIntel(res.data);\n        })\n    }, [])\n    ///////////////////////////////////////   view   /////////////////////////////////////////////////////\n    return <HomeElements \n                newPost = {newPost}\n                authorisedUserDetails = {authorisedUserDetails}\n                setAuthorisedUserDetails = {setAuthorisedUserDetails}\n                postItemsIntel = {postItemsIntel}\n                setNewPost = {setNewPost}\n            />\n}\n","import { TextField } from '@material-ui/core';\nimport React from 'react'\nimport { Link } from 'react-router-dom'\nimport './index.css'\n\nexport default function LogInForm(props) {\n    const{\n        tempUserDetails,\n        onChangeTempUserHandleNameHandler,\n        onChangeTempUserEmailHandler,\n        onChangeTempUserPasswordHandler,\n        loginSubmitHandler\n    } = props;\n    return (\n        <div className = \"root-login\">\n            <form>\n                <div className = \"box\">\n                    <div className = \"box-inner\">\n                        <div className = \"form-container\">\n                            {/* head description */}\n                            <div className = \"form-title\">\n                                <h2>Log In</h2>\n                            </div>\n                            {/* handle handle */}\n                            <div className=\"form-group\">\n                                <label >Enter Handle :</label>\n                                <TextField\n                                    type=\"text\" \n                                    className=\"form-control-input\" \n                                    id=\"userHandle\" \n                                    aria-describedby=\"emailHelp\" \n                                    value = {tempUserDetails.tempUserHandleName}\n                                    onChange = {onChangeTempUserHandleNameHandler}\n                                />\n                            </div>\n                            {/* email */}\n                            <div className=\"form-group\">\n                                <label >Email address :</label>\n                                <TextField\n                                    type=\"email\" \n                                    className=\"form-control-input\" \n                                    id=\"userEmail\" \n                                    aria-describedby=\"emailHelp\" \n                                    value = {tempUserDetails.tempUserEmail}\n                                    onChange = {onChangeTempUserEmailHandler}\n                                />\n                            </div>\n                            \n                            {/* password */}\n                            <div className=\"form-group\">\n                                <label >Password:</label>\n                                <TextField \n                                    type=\"password\" \n                                    className=\"form-control-input\" \n                                    id=\"userPassword\" \n                                    value = {tempUserDetails.tempUserPassword}\n                                    onChange = {onChangeTempUserPasswordHandler}\n                                />\n                            </div>\n                            \n                            {/* submit button */}\n                            <div className = \"form-group\" >\n                                <button \n                                    type=\"submit\" \n                                    className = \"btn btn-primary\"\n                                    onClick = {loginSubmitHandler}\n                                >\n                                Log In\n                                </button>    \n                            </div>\n                            {/* link to sign in UI */}\n                            <div className = \"form-link\">\n                                <Link className=\"link\" to = \"/signup\">Create new account</Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    )\n\n    \n    \n}\n","import React , {useState } from 'react'\r\nimport LogInForm from './LogInForm';\r\nimport {useHistory } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport { PORT } from '../../backEndPort';\r\nimport { ADDRESS } from '../../BackendAddress';\r\nimport { URL } from '../../urls/url';\r\nimport { ObjectToBeSavedInBrowser } from '../../model/ObjectToBeSavedInBrowser';\r\nimport { getLoggedIn } from '../../Utility';\r\n\r\nexport default function LogIn() {\r\n\r\n    ////////////////////////////////////////////   model portion    ////////////////////////////////////////////////////\r\n\r\n    const [authorisedUserDetails, setAuthorisedUserDetails] = useState(new Object());\r\n    const [isLoggedIn, setIsLoggedIn] = useState(true)\r\n    const [tempUserDetails, setTempUserDetails] = useState({\r\n        tempUserHandleName : \"\",\r\n        tempUserEmail : \"\",\r\n        tempUserPassword : \"\"\r\n    })\r\n    let history = useHistory();\r\n\r\n    const onChangeTempUserHandleNameHandler = (e) =>{\r\n        setTempUserDetails({\r\n            ...tempUserDetails, tempUserHandleName : e.target.value\r\n        })\r\n    }\r\n\r\n    // getting user email\r\n    const onChangeTempUserEmailHandler = (e) =>{\r\n        setTempUserDetails({\r\n            ...tempUserDetails, tempUserEmail : e.target.value\r\n        })\r\n    }\r\n\r\n    // getting user password\r\n    const onChangeTempUserPasswordHandler = (e) =>{\r\n        setTempUserDetails({\r\n            ...tempUserDetails, tempUserPassword : e.target.value\r\n        })\r\n    }\r\n\r\n    const saveToBrowserStorage = value =>{\r\n        const objectToBeSaved = new ObjectToBeSavedInBrowser(true,value);\r\n        getLoggedIn('DLGT_PROJECT2_postGivingAppRemastered',JSON.stringify(objectToBeSaved));\r\n    }\r\n\r\n    /// controller portion\r\n    const loginSubmitHandler = (e) =>{\r\n        e.preventDefault();\r\n        if(tempUserDetails.tempUserEmail && tempUserDetails.tempUserHandleName && tempUserDetails.tempUserPassword){\r\n            axios.post(URL.LOGIN_URL, {tempUserDetails})\r\n            .then((res) =>{\r\n                saveToBrowserStorage(res.data[0]);\r\n                if(res.data.length){\r\n                    history.push({\r\n                        pathname : '/',\r\n                        state : {data : res.data[0]}\r\n                    });\r\n                    \r\n                    setAuthorisedUserDetails(res.data[0]);\r\n                } else {\r\n                    alert('No matches !!')\r\n                }\r\n            })\r\n        } else {\r\n            alert('What are doing??')\r\n        }\r\n        \r\n    }\r\n    // axios.post(`https://fast-meadow-49435.herokuapp.com/logIn/login`,{tempUserDetails})\r\n            \r\n\r\n\r\n    /// View portion\r\n    return <LogInForm\r\n                tempUserDetails = {tempUserDetails}\r\n                onChangeTempUserHandleNameHandler = {onChangeTempUserHandleNameHandler}\r\n                onChangeTempUserEmailHandler = {onChangeTempUserEmailHandler}\r\n                onChangeTempUserPasswordHandler = {onChangeTempUserPasswordHandler}\r\n                loginSubmitHandler = {loginSubmitHandler}\r\n            />\r\n}\r\n","import React from 'react'\nimport { CgFeed } from \"react-icons/cg\";\nimport { FiSettings } from \"react-icons/fi\";\nimport { Button, Divider  } from '@material-ui/core';\nimport {PORT} from '../../../../../../backEndPort'\nimport axios from 'axios'\nimport {Link} from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport './Status/StatusView.css';\n\n\nexport default function ProfileHeaderCom(props) {\n    \n    const {authorisedUserDetails, userPostItemsIntel} = props;\n\n    return (\n        <div>\n            <div className=\"user-info\">\n                {/**profile picture */} \n                <div className=\"profile-photo\"><h1>{authorisedUserDetails.userHandle[0]}</h1></div>\n\n                {/**profile information */}\n                <div className=\"profiledetails\">\n                    <div>\n                        <h3>{authorisedUserDetails.userName}</h3>\n                        <p>\n                            <b>Userhandle:</b> {authorisedUserDetails.userHandle}<br/>\n                            <b>Email address:</b> {authorisedUserDetails.userEmailAddress}<br/>\n                            <b>Phone number:</b> {authorisedUserDetails.userPhoneNumber}<br/>\n                        </p>\n                    </div>\n\n                    <Divider style = {{\n                        background: 'black',\n                        height: '1.5px',\n                        marginBottom: '20px'\n                    }} />\n\n                    <div>\n                        <p>\n                            <b>Total posts:</b> {userPostItemsIntel.length}<br/>\n                            <b>Total likes:</b> 9<br/>\n                            <b>Total comments:</b> 5<br/>\n                        </p>\n                    </div>\n\n\n                </div>\n            </div>\n            \n        </div>\n    )\n}\n","import React from 'react'\nimport ProfileHeaderCom from './ProfileHeaderCom';\n\nexport default function ProfileHeader(props) {\n    const {authorisedUserDetails, userPostItemsIntel} = props\n\n    return (\n        <ProfileHeaderCom \n            authorisedUserDetails = {authorisedUserDetails}\n            userPostItemsIntel = {userPostItemsIntel}\n        />\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios'\nimport {URL} from '../../../../../../../urls/url';\nimport { Button , TextField, Divider } from '@material-ui/core';\nimport ProfileHeader from '../../ProfileHeader';\nimport '../Status/StatusView.css'\nimport './Settings.css'\n\nexport default function Settings(props) {\n    const {\n        isSame ,\n        isChanged,\n        newUserDetails , \n        tempPasswordStorage,\n        onChangeHandleNameHandler,\n        onChangeNameHandler,\n        onChangeEmailHandler,\n        onChangePhoneNumberHandler,\n        onChangeCurrentPasswordHandler,\n        onChangeFirstPasswordHandler,\n        onChangeConfirmPasswordHandler,\n        submitUsersUpdateInfo, authorisedUserDetails} = props;\n        const [userPostItemsIntel, setUserPostItemsIntel] = useState([])\n    \n    ///// value will come from backEnd\n    //// query to find out the filtered posts ... those are posted by the user\n    useEffect(() => {\n        axios.post(URL.USERS_POST_URL , {authorisedUserDetails})\n            .then((res) =>{\n                if(res.data.length){\n                    setUserPostItemsIntel(res.data)\n                    // console.log(res.data)\n                } else {\n                    console.log('no data found')\n                }\n            })\n    }, [])\n\n    const useStyles = makeStyles(() => ({\n        root:{\n            display : 'flex',\n            backgroundColor : '#edf2f2',\n            flexDirection : 'column',\n            borderRadius : '6px',\n            border: 1,\n            borderStyle: 'solid',\n            marginLeft : 'auto',\n            width: '100%',\n            height: 'auto',\n            padding: '30px',\n        },\n        box:{\n            alignSelf: 'center',\n            width : '150%',\n            marginBottom: '20px',\n            marginLeft: '5%'\n        },\n        button_div :{\n            display : 'flex',\n            width : '90%',\n            marginTop : '1ch',\n            marginLeft: '5%',\n            marginRight: '5%'\n        },\n        button_desgin :{\n            backgroundColor : '#30555A',\n            width: '100%',\n            paddingLeft: '70px',\n            paddingRight: '70px',\n        },\n        tectfield_design:{\n            width : '60%',\n\n        }\n    }));\n\n    const styles = useStyles();\n    const [isClicked, setIsClicked] = useState(false);\n\n    const buttonClicked = () => {\n        setIsClicked(!isClicked);\n    }\n\n    return (\n        <div className=\"root-status\">\n            {/**profile part */}\n            <ProfileHeader authorisedUserDetails= {authorisedUserDetails} userPostItemsIntel={userPostItemsIntel} />\n\n            {/**settings section */}\n            <div className=\"user-setting\">\n            <div className = {styles.root}>\n            <form>\n                {/* userHandler change */}\n                <div className = {styles.box} >\n                    <TextField\n                        className = {styles.tectfield_design}\n                        id=\"outlined-helperText\"\n                        label=\"Change Handler\"\n                        defaultValue=\"\"\n                        helperText=\"\"\n                        variant=\"outlined\"\n                        onChange = {onChangeHandleNameHandler}\n                    />\n                </div>\n\n                {/* name change */}\n                <div className = {styles.box} >\n                    <TextField\n                        className = {styles.tectfield_design}\n                        id=\"outlined-helperText\"\n                        label=\"Change Name\"\n                        defaultValue=\"\"\n                        helperText=\"\"\n                        variant=\"outlined\"\n                        onChange={onChangeNameHandler}\n                    />\n                </div>\n\n                {/* email address change */}\n                <div className = {styles.box} >\n                    <TextField\n                        className = {styles.tectfield_design}\n                        id=\"outlined-helperText\"\n                        label=\"Change Email address\"\n                        defaultValue=\"\"\n                        helperText=\"\"\n                        variant=\"outlined\"\n                        onChange={onChangeEmailHandler}\n                    />\n                </div>\n\n                {/* phone number change */}\n                <div className = {styles.box} >\n                    <TextField\n                        className = {styles.tectfield_design}\n                        id=\"outlined-helperText\"\n                        label=\"Change Phone\"\n                        defaultValue=\"\"\n                        helperText=\"\"\n                        variant=\"outlined\"\n                        onChange={onChangePhoneNumberHandler}\n                    />\n                </div>\n\n                {/* confirming current password */}\n                <div className = {styles.box} >\n                    <TextField\n                        className = {styles.tectfield_design}\n                        id=\"outlined-helperText\"\n                        label=\"Current password\"\n                        defaultValue=\"\"\n                        helperText=\"\"\n                        variant=\"outlined\"\n                        onChange={onChangeCurrentPasswordHandler}\n                    />\n                </div>\n\n                {/* new password input */}\n                <div className = {styles.box} >\n                    <TextField\n                        className = {styles.tectfield_design}\n                        id=\"outlined-helperText\"\n                        label=\"Change password\"\n                        defaultValue=\"\"\n                        helperText=\"\"\n                        variant=\"outlined\"\n                        onChange={onChangeFirstPasswordHandler}\n                    />\n                </div>\n\n                {/* new password confirm */}\n                <div className = {styles.box} >\n                    <TextField\n                        className = {styles.tectfield_design}\n                        id=\"outlined-helperText\"\n                        label=\"Confirm new password\"\n                        defaultValue=\"\"\n                        helperText=\"\"\n                        variant=\"outlined\"\n                        onChange={onChangeConfirmPasswordHandler}\n                    />\n                </div>\n\n                {/* submit button */}\n                <div className = {styles.button_div}>\n                    <Button\n                        type = \"submit\"\n                        className = {styles.button_desgin}\n                        onClick ={submitUsersUpdateInfo}\n                    >Update</Button>\n                </div>\n            </form>          \n        </div>\n            </div>\n        </div>\n        \n    )\n}\n","import React, { useState } from 'react'\nimport Settings from './Settings';\nimport axios from 'axios'\nimport { Redirect } from 'react-router-dom'\nimport  {myFormattedTime} from '../../../../../../../functions/utilities'\nimport {URL} from '../../../../../../../urls/url'\nimport { getloggedInUsersInfo } from '../../../../../../../Utility';\n\nexport default function (props) {\n    // const {authorisedUserDetails, setAuthorisedUserDetails} = props;\n\n    const [authorisedUserDetails, setAuthorisedUserDetails] = useState(getloggedInUsersInfo)\n\n    const [isChanged, setIsChanged] = useState(false)\n    const [isSignedUp, setIsSignedUp] = useState(false)\n    const [isSame, setIsSame] = useState()\n    const [updateUserDetails, setUpdateUserDetails] = useState({\n        userId: authorisedUserDetails.userId,\n        userHandleName : authorisedUserDetails.userHandle,\n        userPassword : authorisedUserDetails.userPassword,\n        userName : authorisedUserDetails.userName,\n        userEmailAddress : authorisedUserDetails.userEmailAddress,\n        userPhoneNumber : authorisedUserDetails.userPhoneNumber,\n        userUpdatedTime : \"\"\n    })\n    const [tempPasswordStorage, setTempPasswordStorage] = useState({\n        currentPassword: \"\",\n        password1: \"\",\n        password2 : \"\"\n    })\n    const [isAllSet, setIsAllSet] = useState(false)\n    \n    ///////////////////////////////////////////////////////////// controller portion   /////////////////////////////////////////////////////////////////\n\n\n    const postUpdatedData = () => {\n        axios.post(URL.UPDATE_USER_INFO_URL , {updateUserDetails})\n            .then((res) =>{\n            })\n    }\n\n    const getUpdatedData = () => {\n        axios.post(URL.USERINFO_SETTINGS_URL , {updateUserDetails})\n            .then((res) =>{\n                if(res.data.length){\n                    setAuthorisedUserDetails(res.data[0])\n                } else {\n                    console.log('no data')\n                }\n            })\n    }\n\n    React.useEffect(()=>{\n        ///// saving to database ///////\n        getUpdatedData();\n    } , [isAllSet])\n\n\n    // getting user handle name\n    const onChangeHandleNameHandler = (e) =>{\n        if(e.target.value) {\n            setUpdateUserDetails({\n                ...updateUserDetails, userHandleName : e.target.value\n            })\n        }\n    }\n\n    // getting user name\n    const onChangeNameHandler = (e) =>{\n        if(e.target.value) {\n            setUpdateUserDetails({\n                ...updateUserDetails, userName : e.target.value\n            })\n        }\n    }\n\n    // getting user email\n    const onChangeEmailHandler = (e) =>{\n        if(e.target.value) {\n            setUpdateUserDetails({\n                ...updateUserDetails, userEmailAddress : e.target.value\n            })\n        }\n    }\n\n    // getting user phoneNumber\n    const onChangePhoneNumberHandler = (e) =>{\n        if(e.target.value) {\n            setUpdateUserDetails({\n                ...updateUserDetails, userPhoneNumber : e.target.value\n            })\n        }\n    }\n\n    const onChangeCurrentPasswordHandler = (e) =>{\n        setTempPasswordStorage({\n            ...tempPasswordStorage , currentPassword : e.target.value\n        });\n    }\n\n    // getting user first password\n    const onChangeFirstPasswordHandler = (e) =>{\n        setTempPasswordStorage({\n            ...tempPasswordStorage , password1 : e.target.value\n        });\n    }\n\n    // getting user confirm password\n    const onChangeConfirmPasswordHandler = (e) =>{\n        setIsChanged(true)\n        if(e.target.value === tempPasswordStorage.password1){\n            setIsSame(true);\n            setUpdateUserDetails({\n                ...updateUserDetails, userPassword : e.target.value\n            })\n        }else{\n            setIsSame(false)\n        }\n        \n    }\n\n    // handling sign in button\n    const submitUsersUpdateInfo = (e) =>{\n        e.preventDefault();\n        if(tempPasswordStorage.currentPassword === authorisedUserDetails.userPassword) {\n            setUpdateUserDetails({\n                ...updateUserDetails , userUpdatedTime : myFormattedTime()\n            })\n            postUpdatedData();\n\n            setIsAllSet(true);\n        } else {\n            alert('!!! Check current password !!!')\n        } \n    }\n\n    return (\n        <div>\n            <Settings\n                isSame = {isSame}\n                isChanged = {isChanged}\n                updateUserDetails = {updateUserDetails}\n                tempPasswordStorage = {tempPasswordStorage}\n                onChangeHandleNameHandler = {onChangeHandleNameHandler}\n                onChangeNameHandler = {onChangeNameHandler}\n                onChangeEmailHandler = {onChangeEmailHandler}\n                onChangePhoneNumberHandler = {onChangePhoneNumberHandler}\n                onChangeCurrentPasswordHandler = {onChangeCurrentPasswordHandler}\n                onChangeFirstPasswordHandler = {onChangeFirstPasswordHandler}\n                onChangeConfirmPasswordHandler = {onChangeConfirmPasswordHandler}\n                submitUsersUpdateInfo = {submitUsersUpdateInfo}\n                authorisedUserDetails = {authorisedUserDetails}\n            />\n        </div>\n    )\n}\n","import React from 'react'\nimport axios from 'axios'\nimport PostLists from '../../../../PostLists'\nimport {URL} from '../../../../../../../urls/url';\nimport { Divider } from '@material-ui/core';\nimport ProfileHeader from '../../ProfileHeader';\nimport './StatusView.css'\n\nexport default function StatusView(props) {\n\n    const {authorisedUserDetails} = props;\n    const [userPostItemsIntel, setUserPostItemsIntel] = React.useState([])\n    \n    ///// value will come from backEnd\n    //// query to find out the filtered posts ... those are posted by the user\n    React.useEffect(() => {\n        axios.post(URL.USERS_POST_URL , {authorisedUserDetails})\n            .then((res) =>{\n                if(res.data.length){\n                    setUserPostItemsIntel(res.data)\n                    // console.log(res.data)\n                } else {\n                    console.log('no data found')\n                }\n            })\n    }, [])\n\n\n    return (\n        <div className=\"root-status\">\n            {/**profile part */}\n            <ProfileHeader authorisedUserDetails= {authorisedUserDetails} userPostItemsIntel={userPostItemsIntel} />\n            {/**posts section */}\n            <div className=\"user-post\">\n                <PostLists \n                    authorisedUserDetails = {authorisedUserDetails}\n                    postItemsIntel = {userPostItemsIntel}\n                />\n            </div>\n        </div>\n        \n    )\n}","import React from 'react'\nimport StatusView from './StatusView'\n\nexport default function Status(props) {\n    const {authorisedUserDetails} = props\n\n    // console.log(\"INSIDE STATUS\");\n    // console.log(props);\n\n    return (\n        <StatusView \n            authorisedUserDetails = {authorisedUserDetails}\n        />\n    )\n}\n","import React from 'react'\nimport './index.css'\nimport  {IoIosCheckmark , IoIosClose} from 'react-icons/io';\nimport TextField from '@material-ui/core/TextField';\nimport { Link } from 'react-router-dom'\n\n\nexport default function SignInForm(props) {\n    const {\n        isSame ,\n        isChanged,\n        newUserDetails , \n        tempPasswordStorage,\n        onChangeHandleNameHandler,\n        onChangeNameHandler,\n        onChangeEmailHandler,\n        onChangePhoneNumberHandler,\n        onChangeFirstPasswordHandler,\n        onChangeConfirmPasswordHandler,\n        submitNewUsersAllInfo} = props;\n    return (\n        <div className = \"root-signup\">\n            <form>\n                <div className = \"box\">\n                    <div className = \"box-inner\">\n                        <div className = \"form-container\">\n                        \n                        {/* head description */}\n                        <div className = \"form-title\">\n                            <h2>Sign Up</h2>\n                        </div>\n\n                        {/* handle  */}\n                        <div className=\"form-group\">\n                            <label >Enter Handle :</label>\n                            <TextField\n                                type=\"text\" \n                                className=\"form-control-input\" \n                                id=\"userHandle\" \n                                aria-describedby=\"handleHelp\"\n                                value = {newUserDetails.userHandleName}\n                                onChange = {onChangeHandleNameHandler}\n                            />\n                        </div>\n\n                        {/* name  */}\n                        <div className=\"form-group\">\n                            <label >Enter Name :</label>\n                            <TextField \n                                type=\"text\" \n                                className=\"form-control-input\" \n                                id=\"userName\" \n                                aria-describedby=\"nameHelp\"\n                                value = {newUserDetails.userName}\n                                onChange = {onChangeNameHandler}\n                            />\n                        </div>\n\n                        {/* email */}\n                        <div className=\"form-group\">\n                            <label >Email address :</label>\n                            <TextField \n                                type=\"email\" \n                                className=\"form-control-input\" \n                                id=\"userEmail\" \n                                aria-describedby=\"emailHelp\" \n                                value = {newUserDetails.userEmailAddess}\n                                onChange = {onChangeEmailHandler}\n                            />\n                        </div>\n                        \n                        {/* phone nummber  */}\n                        <div className=\"form-group\">\n                            <label >Enter Phone Number :</label>\n                            <TextField \n                                type=\"text\" \n                                className=\"form-control-input\" \n                                id=\"userPhoneNumber\" \n                                aria-describedby=\"phoneNumberHelp\" \n                                value = {newUserDetails.userPhoneNumber}\n                                onChange = {onChangePhoneNumberHandler}\n                            />\n                        </div>\n\n                        {/* password */}\n                        <div className=\"form-group\">\n                            <label >Enter Password:</label>\n                            <TextField\n                                type=\"password\" \n                                className=\"form-control-input\" \n                                id=\"userPassword1\" \n                                value = {tempPasswordStorage.password1}\n                                onChange = {onChangeFirstPasswordHandler}\n                            />\n                        </div>\n\n                        {/* confirm password */}\n                        <div className=\"form-group\">\n                            <label >Confirm Password:</label>\n                            <TextField\n                                type=\"password\" \n                                className=\"form-control-input\" \n                                id=\"userPassword2\" \n                                value = {tempPasswordStorage.password2}\n                                onChange = {onChangeConfirmPasswordHandler}\n                            />\n                        </div>\n\n                        {/* password's equal confirmation sign */}\n                        {\n                            (isChanged && tempPasswordStorage.password1 && tempPasswordStorage.password2) && (\n                                <div className = \"confirm\">\n                                    {   \n                                        // selecting icons\n                                        (isSame === true) ? (\n                                            <IoIosCheckmark color = \"#00f010\" />\n                                        ) : (\n                                            <IoIosClose color = \"#cc0e00\" />\n                                        )\n                                    }\n                                </div>        \n                            )\n                        } \n                        {/* submit / signIn button */}\n                        <div className = \"form-group\">\n                            <button \n                                type=\"submit\" \n                                className=\"btn btn-primary\" \n                                onClick = {submitNewUsersAllInfo}\n                            >\n                            Submit\n                            </button>\n                        </div>\n                        <div className = \"form-link\">\n                            <Link className=\"link\" to = \"/login\">Already have an account?</Link>\n                        </div>\n\n                    </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    )\n    \n}\n\n","import React , {useState} from 'react'\nimport SignInForm from './SignInForm'\nimport axios from 'axios'\nimport { Redirect } from 'react-router-dom'\nimport {PORT} from '../../backEndPort'\nimport { URL } from '../../urls/url'\nimport  {myFormattedTime} from '../../functions/utilities'\n\nexport default function SignUp() {\n    ///////////////////////////////////////////////////////////// model portion   /////////////////////////////////////////////////////////////////\n    const [isChanged, setIsChanged] = useState(false)\n    const [isSignedUp, setIsSignedUp] = useState(false)\n    const [isSame, setIsSame] = useState()\n    const [newUserDetails, setNewUserDetails] = useState({\n        userHandleName : \"\",\n        userPassword : \"\",\n        userName : \"\",\n        userEmailAddress : \"\",\n        userPhoneNumber : \"\",\n        userInsertedTime : \"\",\n        userUpdatedTime : \"\"\n    })\n    const [tempPasswordStorage, setTempPasswordStorage] = useState({\n        password1: \"\",\n        password2 : \"\"\n    })\n    const [isAllSet, setIsAllSet] = useState(false)\n    \n    ///////////////////////////////////////////////////////////// controller portion   /////////////////////////////////////////////////////////////////\n    \n    React.useEffect( async ()=>{\n        ///// saving to database ///////\n        try {\n            const response = await axios.post(URL.SIGNUP_URL , {newUserDetails})\n            console.log(response);\n        } catch (error) {\n            console.log(error);        \n        }\n        console.log(newUserDetails);\n    } , [isAllSet])\n\n     /////// redirecting to login page\n    if(isSignedUp){\n        return <Redirect to = \"/\" />\n    }\n\n    // getting user handle name\n    \n    const onChangeHandleNameHandler = (e) =>{\n        setNewUserDetails({\n            ...newUserDetails, userHandleName : e.target.value\n        })\n    }\n\n    // getting user name\n    const onChangeNameHandler = (e) =>{\n        setNewUserDetails({\n            ...newUserDetails, userName : e.target.value\n        })\n    }\n\n    // getting user email\n    const onChangeEmailHandler = (e) =>{\n        setNewUserDetails({\n            ...newUserDetails, userEmailAddress : e.target.value\n        })\n    }\n\n    // getting user phoneNumber\n    const onChangePhoneNumberHandler = (e) =>{\n        setNewUserDetails({\n            ...newUserDetails, userPhoneNumber : e.target.value\n        })\n    }\n\n    // getting user first password\n    const onChangeFirstPasswordHandler = (e) =>{\n        setTempPasswordStorage({\n            ...tempPasswordStorage , password1 : e.target.value\n        });\n    }\n\n    // getting user confirm password\n    const onChangeConfirmPasswordHandler = (e) =>{\n        setIsChanged(true)\n        if(e.target.value === tempPasswordStorage.password1){\n            setIsSame(true);\n        }else{\n            setIsSame(false)\n        }\n        setTempPasswordStorage({\n            ...tempPasswordStorage , password2 : e.target.value\n        });\n    }\n\n    // handling sign in button\n    const submitNewUsersAllInfo = (e) =>{\n        e.preventDefault();\n        console.log(tempPasswordStorage);\n        if(newUserDetails.userHandleName && newUserDetails.userName && newUserDetails.userEmailAddress && newUserDetails.userPhoneNumber && tempPasswordStorage.password1 && tempPasswordStorage.password2){\n            if(tempPasswordStorage.password1 === tempPasswordStorage.password2){\n                setNewUserDetails({\n                    ...newUserDetails , userPassword : tempPasswordStorage.password1,\n                                        userInsertedTime : myFormattedTime()\n                })\n                setIsAllSet(true);\n                setIsSignedUp(true);\n            } else {\n                alert('!!! Check password !!!')\n            }\n        } else {\n            alert('Sorry Dude')\n        }\n        ///////// setting up that we are ready to go to log in page ///\n        \n    }\n    \n    \n    ///////////////////////////////////////////////////////////// view portion  /////////////////////////////////////////////////////////////////\n\n    return <SignInForm \n                isSame = {isSame}\n                isChanged = {isChanged}\n                newUserDetails = {newUserDetails}\n                tempPasswordStorage = {tempPasswordStorage}\n                onChangeHandleNameHandler = {onChangeHandleNameHandler}\n                onChangeNameHandler = {onChangeNameHandler}\n                onChangeEmailHandler = {onChangeEmailHandler}\n                onChangePhoneNumberHandler = {onChangePhoneNumberHandler}\n                onChangeFirstPasswordHandler = {onChangeFirstPasswordHandler}\n                onChangeConfirmPasswordHandler = {onChangeConfirmPasswordHandler}\n                submitNewUsersAllInfo = {submitNewUsersAllInfo}\n            />\n}\n","import React, { useState } from 'react'\nimport { BrowserRouter as Router , Link, Route, Switch, useRouteMatch, useLocation, useHistory } from 'react-router-dom'\nimport { CgFeed } from \"react-icons/cg\";\nimport { FiSettings } from \"react-icons/fi\";\nimport { Button  } from '@material-ui/core';\nimport Settings from './ProfileHeader/Settings';\nimport Status from './ProfileHeader/Status';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { getloggedInUsersInfo } from '../../../../../Utility';\nimport './ProfileView.css'\nimport { IoHome } from 'react-icons/io5';\n\nexport default function ProfileView() {\n\n\n    let location = useLocation();\n    let history = useHistory();\n\n    const {path,url} = useRouteMatch();\n\n    const [authorisedUserDetails, setAuthorisedUserDetails] = useState(getloggedInUsersInfo());\n    \n    \n\n    const useStyles = makeStyles(theme => ({\n        root:{\n            backgroundColor: '#FF000',\n        },\n        icons : {\n            display : 'flex',\n            alignItems : 'center',\n            color : '#fff',\n        },\n        logger_name:{\n            fontSize : '25px',\n            fontFamily : 'arial',\n            marginLeft: '20px',\n            color : '#fff'\n        }\n        \n    }));\n\n    const styles = useStyles();\n\n\n    const onClickBackToHome = () =>{\n        history.push({\n            pathname : '/'\n        })\n    }\n\n    return (\n        <div className=\"root-profile\">\n        <Router>\n                <nav className=\"navbar\">\n                    <div className = \"back-home\">\n                        <Button onClick = {onClickBackToHome}>\n                            <IoHome size =\"35\" color=\"#fff\" />\n                        </Button>\n                    </div>\n                    <p className = {styles.logger_name}>\n                        <b>{authorisedUserDetails.userHandle}</b>\n                    </p>\n                    <div className=\"links\">\n                        <Link as = {Link} to={`${url}`}> \n                            <Button>\n                                <CgFeed size = \"35\" color=\"#fff\" />\n                            </Button>\n                        </Link>\n                        <Link as = {Link} to={`${url}/asd`}>\n                            <Button>\n                                <FiSettings size = \"35\" color=\"#fff\" />\n                            </Button>\n                        </Link>\n                    </div>\n                </nav>\n                <div className=\"body\">\n                <Switch>\n                    <Route exact path={`${path}`}>\n                        <Status \n                            authorisedUserDetails = {authorisedUserDetails}\n                        />\n                    </Route>\n                    <Route path={`${path}/asd`}>\n                        <Settings \n                            authorisedUserDetails = {authorisedUserDetails}\n                            setAuthorisedUserDetails = {setAuthorisedUserDetails}\n                        />\n                    </Route>\n                </Switch>\n                </div>\n        </Router>\n        </div>\n    )\n            \n}","import React, {useState} from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { getloggedInUsersInfo } from '../../../../../Utility';\nimport ProfileView from './ProfileView'\n\nexport default function Profile() {\n    let location = useLocation();\n    let initialData = getloggedInUsersInfo();\n\n    console.log(initialData);\n    console.log(getloggedInUsersInfo());\n\n    const [authorisedUserDetails, setAuthorisedUserDetails] = useState(initialData);\n    return (\n        <ProfileView \n            authorisedUserDetails = {authorisedUserDetails}\n            setAuthorisedUserDetails = {setAuthorisedUserDetails}\n        />\n     )\n}\n","export class PostCommentModel  {\n    constructor(description,userName,userId,postId){\n        this.postId = postId\n        this.userId = userId\n        this.commentDescription = description\n        this.commentBy = userName\n        this.commentWritingTime = \"\"\n    }\n}","import { styled } from '@material-ui/core';\nimport React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nexport default function PostCommentView({value}) {\n    const useStyles = makeStyles(theme => ({\n        mainContainer:{\n            fontFamily : 'arial'\n        },\n        commenterNameDateContainer:{\n            display : 'flex',\n            flexDirection : 'row'\n        },\n        commnerterName:{\n\n        },\n\n        commnerterNameStyle:{\n            \n        },\n\n        commentTime:{\n            marginLeft : '1ch'\n        },\n        commentBody:{\n            marginTop : '1ch',\n            marginLeft : '.5em'\n        },\n        commentBodyStyle:{\n            size : '10ch'\n        },\n        commentTimeStyle:{\n            color : '#939998'\n        }\n    }));\n    // #626b61\n    const styles = useStyles();   \n    return (\n        <div >\n            <br/>\n            <div className = {styles.mainContainer}>\n                <div className = {styles.commenterNameDateContainer}>\n                    <div className = {styles.commnerterName}>\n                        <text className = {styles.commnerterNameStyle}>\n                            <b>{value.commentBy}</b>\n                        </text>\n                    </div>\n                    <div className = {styles.commentTime}>\n                        <text className = {styles.commentTimeStyle}>\n                            {value.commentWritingTime}\n                        </text>\n                    </div>\n                </div>\n                <div className = {styles.commentBody}>\n                    <text className = {styles.commentBodyStyle}>\n                        {value.commentDescription}\n                    </text>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, {useState, useEffect} from 'react'\nimport PostCommentView from './PostCommentView'\nimport axios from 'axios'\nimport {PORT} from '../../../backEndPort'\n\nexport default function PostComment(props) {\n    const {postDetails, commentsOnPost} = props\n\n    return(\n        <div>\n            {\n                commentsOnPost.map((item) => <PostCommentView value = {item} />)\n            }\n        </div>\n    )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Divider } from '@material-ui/core';\nimport { BsPeopleFill } from 'react-icons/bs';\nimport PostComment from './PostComments';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport { BiSend } from 'react-icons/bi';\nimport { BsThreeDotsVertical} from 'react-icons/bs';\nimport './index.css'\n\nexport default function FullPostView(props) {\n\n    const {\n        postDetails,\n        commentsOnPost,\n        totalComments,\n        onChangeCommentHandler,\n        onSubmitCommentHandler\n    } = props;\n\n    return (\n        <div className = \"mainPage\">\n            <div className = \"mainContentContainer\">\n                    {/* post header */}\n                    <div className = \"postHeader\">\n                        {/* name and date */}\n                        <div className = \"postHeaderPostProviderNameDate\">\n                            {/* name of user */}\n                            <div className = \"postHeaderPostProviderName\">\n                                <text className = \"postHeaderPostProviderNameStyle\">\n                                    <b>{postDetails.postUserName}</b>\n                                </text>\n                            </div>\n                            {/* post time */}\n                            <div className = \"postHeaderPostProvidingTime\">\n                                <text className = \"postHeaderPostProvidingTimeStyle\">\n                                    {postDetails.postInsertedTime}\n                                </text>\n                            </div>\n                            \n                        </div>\n                        <div className = \"postOptions\">\n                            <IconButton>\n                                <BsThreeDotsVertical />\n                            </IconButton>\n                        </div>\n                    </div>\n                    <Divider style={{ background: 'black' , width : '90%' , marginLeft : '5%' }} />\n                    <div className = \"postBody\">\n                        <div className = \"postBodyContainer\">\n                            <text className = \"postTextStyle\">\n                                {postDetails.postDescription}\n                            </text>\n                        </div>\n                    </div>\n                    <Divider />\n                    <div className = \"postCommentDetails\">\n                        <div className = \"postCommentDetailsIcon\">\n                            <BsPeopleFill className = \"postCommentDetailsIconStyle\"/>\n                        </div>\n                        <div className = \"postCommentNumber\">\n                            {\n                                totalComments ?\n                                <label>{totalComments} {(totalComments < 2) ? \"comment\" : \"comments\"}</label> :\n                                <label>No comments</label>\n                            }\n                        </div>\n                    </div>\n                    <Divider  />\n                    <div className = \"addComment\">\n                        <div className = \"addCommentTextField\">\n                            <TextField\n                                id=\"standard-full-width\"\n                                // style={{ margin: 8 }}\n                                placeholder=\"Add a commnet...\"\n                                className = \"addCommentStyle\"\n                                onChange = {onChangeCommentHandler}\n                                // InputLabelProps={{\n                                //     shrink: true,\n                                // }}\n                            />\n                        </div>\n                        <div className = \"addCommentButton\">\n                            <IconButton\n                                className = \"addCommentButtonStyle\"\n                                onClick = {onSubmitCommentHandler}\n                            >\n                                <BiSend color = \"#ffffff\" size=\"20\"/>\n                            </IconButton>\n                        </div>\n                    </div>\n                    {/* <Divider style={{ background: 'black' , width : '90%' , marginLeft : '5%' }} /> */}\n                    <div className = \"postCommentList\">\n                        <PostComment postDetails={postDetails} commentsOnPost={commentsOnPost}/>\n                    </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useLocation } from 'react-router-dom'\nimport axios from 'axios'\nimport {URL} from '../../urls/url'\nimport { myFormattedTime } from '../../functions/constFunctions';\nimport { PostCommentModel } from '../../model/PostCommentModel';\nimport PostComment from './PostComments';\nimport FullPostView from './FullPostView'\n\nexport default function FullPost() {\n    let location = useLocation();\n    const [postDetails, setPostDetails] = React.useState(location.state.data);\n    const [authorisedUserDetails, setAuthorisedUserDetails] = React.useState(location.state.userData);\n    const [tempComment, setTempCommnet] = React.useState(new PostCommentModel(\"\",authorisedUserDetails.userName,authorisedUserDetails.userId,postDetails.postId));\n    const [commentsOnPost, setCommentsOnPost] = React.useState([])\n    const [totalComments, setTotalComments] = React.useState();\n    const [isAllSet, setIsAllSet] = React.useState(false)\n    /////////////////////////////////////////////////////////////\n\n    React.useEffect(() => {\n        fetchCommentsOnPost();\n        \n    }, [isAllSet])\n\n    const submitComment = () => {\n        axios.post(URL.SUBMIT_COMMENT_URL , {tempComment})\n            .then((res) =>{\n                console.log(res);\n            })\n        setTempCommnet({\n            ...tempComment,commentDescription : \"\"\n        })\n    }\n\n    const fetchCommentsOnPost = () => {\n        axios.post(URL.FETCH_COMMENT_URL,{postDetails})\n        .then((res) =>{\n            if(res.data.length){\n                setCommentsOnPost(res.data)\n                setTotalComments(res.data[0].countt)\n            } else {\n                console.log('data not found')\n            }\n        })\n    }\n\n\n   const onChangeCommentHandler = (e) =>{\n       setTempCommnet({\n           ...tempComment,commentDescription : e.target.value\n       })\n       \n   }\n\n   const onSubmitCommentHandler = (e) =>{\n       e.preventDefault();\n       console.log(Math.floor(Date.now()/1000));\n        setTempCommnet({\n            ...tempComment,commentWritingTime : myFormattedTime()\n        })\n        submitComment()\n        fetchCommentsOnPost()\n        setIsAllSet(true);\n        setTempCommnet({\n            ...tempComment,commentDescription : \"\"\n        })\n   }\n\n    /////////////////////////////////////////////////////////////\n    return <FullPostView \n                postDetails = {postDetails}\n                commentsOnPost = {commentsOnPost}\n                totalComments = {totalComments}\n                onChangeCommentHandler = {onChangeCommentHandler}\n                onSubmitCommentHandler = {onSubmitCommentHandler}\n            />\n}\n","import React from 'react'\nimport './style.css'\nexport default function NotFoundPageView() {\n    return (\n        <div id=\"notfound\">\n            <div class=\"notfound\">\n                <div class=\"notfound-404\">\n                    <h1>404</h1>\n                </div>\n                <h2>Oops! This Page Could Not Be Found</h2>\n                <p>Sorry but the page you are looking for does not exist, have been removed. name changed or is temporarily unavailable</p>\n                <a href=\"/\">Go To Main page</a>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport NotFoundPageView from './NotFoundPageView';\nexport default function NotFoundPage() {\n    return <NotFoundPageView />\n}\n","import React from 'react'\nimport {Route} from 'react-router-dom'\n\nexport default function PublicRoute({component : Component , ...rest}) {\n    return(\n        <Route {...rest} render = {(props) =>(\n                    <Component props = {props} />\n                )\n            }\n        />\n    );\n}\n","import React from 'react'\nimport { Route , Redirect } from 'react-router-dom'\nimport { isLoggedIn } from '../Utility';\n\nexport default function PrivateRoute({component : Component , ...rest}) {\n    return(\n        <Route {...rest} render = {(props) =>(\n                    isLoggedIn() ? \n                        <Component props = {props} />\n                         : <Redirect to = '/login' />\n                )\n            }\n        />\n    );\n}\n","import React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Home from './views/Home'\nimport LogIn from './views/LogIn'\nimport Settings from './views/Home/components/HomeHeader/Profile/ProfileHeader/Settings'\nimport Status from './views/Home/components/HomeHeader/Profile/ProfileHeader/Status'\nimport SignUp from './views/SignUp'\nimport NewPage from './NewPage'\nimport Profile from './views/Home/components/HomeHeader/Profile'\nimport FullPost from './views/FullPost'\nimport NotFoundPage from './views/NotFoundPage'\nimport { isLoggedIn } from './Utility'\nimport PublicRoute from './RoutingModules/PublicRoute'\nimport PrivateRoute from './RoutingModules/PrivateRoute'\n\nexport default function Routes(props) {\n    return (\n        <BrowserRouter>\n            <Switch>\n                <PrivateRoute exact path = \"/\" component = {Home} />\n                <PublicRoute exact path = \"/login\" component = {LogIn} />\n                <PublicRoute exact path = \"/signup\" component = {SignUp} />\n                <PrivateRoute path = \"/profile\" component = {Profile} />\n                <PrivateRoute path = \"/fullpost\" component = {FullPost} />\n                <PrivateRoute exact path = \"*\" component = {NotFoundPage} />\n            </Switch>\n        </BrowserRouter>\n    )\n}\n","import React from 'react';\nimport Routes from './Routes';\n\nfunction App() {\n\n  // const [state, setState] = React.useState(\"\")\n  // const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n\n  return (\n\n    <Routes \n      // isLoggedIn = {isLoggedIn}\n    />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\nimport history from './history'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}